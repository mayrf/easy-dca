name: Release

on:
  push:
    tags: [ 'v*.*.*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ github.ref_name }}

  create-release:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          if git describe --tags --abbrev=0 2>/dev/null; then
            PREV_TAG=$(git describe --tags --abbrev=0)
            CHANGELOG=$(git log --pretty=format:"- %s" ${PREV_TAG}..HEAD)
          else
            CHANGELOG=$(git log --pretty=format:"- %s" HEAD)
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## üéâ easy-dca v${{ github.ref_name }} Release

            ### üöÄ What's New
            - **Modular Architecture**: Separated scheduler, DCA runner, and notifications into distinct packages
            - **Multiple Scheduler Modes**: Support for cron, systemd timer, and manual execution
            - **Enhanced Minimum Order Handling**: Runtime warnings and configurable auto-adjustment for orders below minimum size
            - **Improved Docker Support**: Fixed Dockerfile for Chainguard static images
            - **Better Secret Management**: Support for file-based API key configuration

            ### üîß Features
            - **Scheduler Modes**: Choose between `cron` (internal), `systemd` (systemd timer), or `manual` (run once)
            - **Minimum Order Size Warnings**: Get notified when orders are close to Kraken's minimum (0.00005 BTC)
            - **Auto-adjustment Option**: Configurable behavior for orders below minimum size
            - **Enhanced Notifications**: Improved ntfy integration with better error handling
            - **Docker Optimization**: Smaller, more secure images using Chainguard static builds

            ### üõ†Ô∏è Configuration
            - `EASY_DCA_SCHEDULER_MODE`: Set to "cron", "systemd", or "manual"
            - `EASY_DCA_AUTO_ADJUST_MIN_ORDER`: Enable/disable automatic order size adjustment
            - `EASY_DCA_PUBLIC_KEY_PATH` / `EASY_DCA_PRIVATE_KEY_PATH`: File-based secret management

            ### üì¶ Installation
            ```bash
            # Docker
            docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            
            # Or build locally
            git clone https://github.com/${{ github.repository }}.git
            cd easy-dca
            docker build -t easy-dca .
            ```

            ### üîÑ Migration Notes
            - Existing cron configurations will continue to work
            - New `EASY_DCA_SCHEDULER_MODE` defaults to "cron" for backward compatibility
            - `EASY_DCA_AUTO_ADJUST_MIN_ORDER` defaults to `false` for safety

            ### üìã Changelog
            ${{ steps.changelog.outputs.changelog }}

            ### üîó Links
            - [Documentation](https://github.com/${{ github.repository }}#readme)
            - [Issues](https://github.com/${{ github.repository }}/issues)
            - [Docker Hub](https://ghcr.io/${{ github.repository }})

            ### ‚ö†Ô∏è Important Notes
            - This is the first stable release (v0.1.0)
            - Test thoroughly before using with real funds
            - Always start with `EASY_DCA_DRY_RUN=true`
          draft: false
          prerelease: false 